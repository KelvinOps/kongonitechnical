{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/news/[id]",
      "regex": "^/api/news/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/news/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/courses/[id]",
      "regex": "^/courses/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/courses/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/departments/[id]",
      "regex": "^/departments/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/departments/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/news/[id]",
      "regex": "^/news/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/news/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/about",
      "regex": "^/about(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/about(?:/)?$"
    },
    {
      "page": "/academics",
      "regex": "^/academics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/academics(?:/)?$"
    },
    {
      "page": "/admissions",
      "regex": "^/admissions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admissions(?:/)?$"
    },
    {
      "page": "/bog",
      "regex": "^/bog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/bog(?:/)?$"
    },
    {
      "page": "/careers",
      "regex": "^/careers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/careers(?:/)?$"
    },
    {
      "page": "/cbet",
      "regex": "^/cbet(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cbet(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/courses",
      "regex": "^/courses(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/courses(?:/)?$"
    },
    {
      "page": "/courses/artisan",
      "regex": "^/courses/artisan(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/courses/artisan(?:/)?$"
    },
    {
      "page": "/courses/certificate",
      "regex": "^/courses/certificate(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/courses/certificate(?:/)?$"
    },
    {
      "page": "/courses/diploma",
      "regex": "^/courses/diploma(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/courses/diploma(?:/)?$"
    },
    {
      "page": "/courses/nita-courses",
      "regex": "^/courses/nita\\-courses(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/courses/nita\\-courses(?:/)?$"
    },
    {
      "page": "/courses/shortcourses",
      "regex": "^/courses/shortcourses(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/courses/shortcourses(?:/)?$"
    },
    {
      "page": "/dean-of-students",
      "regex": "^/dean\\-of\\-students(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dean\\-of\\-students(?:/)?$"
    },
    {
      "page": "/departments",
      "regex": "^/departments(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/departments(?:/)?$"
    },
    {
      "page": "/dpacademics",
      "regex": "^/dpacademics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dpacademics(?:/)?$"
    },
    {
      "page": "/dpadministration",
      "regex": "^/dpadministration(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dpadministration(?:/)?$"
    },
    {
      "page": "/enrollment",
      "regex": "^/enrollment(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/enrollment(?:/)?$"
    },
    {
      "page": "/examination",
      "regex": "^/examination(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/examination(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/guidance-counselling",
      "regex": "^/guidance\\-counselling(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/guidance\\-counselling(?:/)?$"
    },
    {
      "page": "/home",
      "regex": "^/home(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/home(?:/)?$"
    },
    {
      "page": "/ilo",
      "regex": "^/ilo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ilo(?:/)?$"
    },
    {
      "page": "/iqa",
      "regex": "^/iqa(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/iqa(?:/)?$"
    },
    {
      "page": "/iso-mr",
      "regex": "^/iso\\-mr(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/iso\\-mr(?:/)?$"
    },
    {
      "page": "/news",
      "regex": "^/news(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/news(?:/)?$"
    },
    {
      "page": "/not-found",
      "regex": "^/not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/not\\-found(?:/)?$"
    },
    {
      "page": "/performance-contracting",
      "regex": "^/performance\\-contracting(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/performance\\-contracting(?:/)?$"
    },
    {
      "page": "/principal",
      "regex": "^/principal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/principal(?:/)?$"
    },
    {
      "page": "/registry",
      "regex": "^/registry(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/registry(?:/)?$"
    },
    {
      "page": "/service-charter",
      "regex": "^/service\\-charter(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/service\\-charter(?:/)?$"
    },
    {
      "page": "/tenders",
      "regex": "^/tenders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tenders(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}