{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Works/Kongoni%20website/kongonitechnical/src/components/ui/card.tsx"],"sourcesContent":["// src/components/ui/card.tsx\nimport * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;;;;AAC7B;AACA;;;;AAEA,MAAM,qBAAO,qMAAA,CAAA,aAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,qMAAA,CAAA,aAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,qMAAA,CAAA,aAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,qMAAA,CAAA,aAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Works/Kongoni%20website/kongonitechnical/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Works/Kongoni%20website/kongonitechnical/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Administrator/Desktop/Works/Kongoni%20website/kongonitechnical/src/app/courses/%5Bid%5D/page.tsx"],"sourcesContent":["// app/courses/[id]/page.tsx\r\n'use client';\r\n\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport Link from \"next/link\";\r\nimport { useParams } from \"next/navigation\";\r\nimport type { LucideIcon } from \"lucide-react\";\r\n\r\n// Import Lucide React icons\r\nimport { \r\n  Laptop, \r\n  Zap, \r\n  TrendingUp, \r\n  Utensils, \r\n  Heart, \r\n  Wrench, \r\n  Hammer, \r\n  Scissors, \r\n  Sprout, \r\n  Paintbrush, \r\n  Map, \r\n  HandHeart, \r\n  GraduationCap,\r\n  Settings,\r\n  Building,\r\n  Clock,\r\n  Calendar,\r\n  BookOpen,\r\n  Award,\r\n  Users,\r\n  ArrowLeft,\r\n  CheckCircle,\r\n  Target,\r\n  Briefcase,\r\n  Car\r\n} from \"lucide-react\";\r\n\r\n// Define the Course interface\r\ninterface Course {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  duration: string;\r\n  type: 'diploma' | 'certificate' | 'artisan' | 'short_course' | 'nita_course' | 'driving_course';\r\n  level?: string;\r\n  featured?: boolean;\r\n  category?: string;\r\n  intake?: string;\r\n  mode?: string;\r\n  createdAt?: Date;\r\n  updatedAt?: Date;\r\n}\r\n\r\n// Course details interface\r\ninterface CourseDetails {\r\n  modules: string[];\r\n  careerOpportunities: string[];\r\n  entryRequirements: string[];\r\n  duration: string;\r\n  level: string;\r\n  mode: string;\r\n  intake: string;\r\n}\r\n\r\n// API response type\r\ntype CoursesResponse = Course[];\r\n\r\nexport default function CourseDetailPage() {\r\n  const params = useParams();\r\n  const courseId = params?.id as string;\r\n\r\n  // Fetch all courses to find the specific one\r\n  const {\r\n    data: courses,\r\n    isLoading,\r\n    error,\r\n  } = useQuery<CoursesResponse>({\r\n    queryKey: [\"/api/courses\"],\r\n    queryFn: async (): Promise<CoursesResponse> => {\r\n      const response = await fetch(\"/api/courses\");\r\n      if (!response.ok) throw new Error(\"Failed to fetch courses\");\r\n      return response.json();\r\n    },\r\n  });\r\n\r\n  const course = courses?.find((c: Course) => c.id === courseId);\r\n\r\n  const getIcon = (title: string, type?: string): LucideIcon => {\r\n    const titleLower = title.toLowerCase();\r\n    \r\n    // Special handling for course types\r\n    if (type === 'driving_course') return Car;\r\n    if (type === 'nita_course') return Settings;\r\n    if (type === 'short_course') return Clock;\r\n    \r\n    // Original icon mapping\r\n    if (titleLower.includes(\"mechanical\") || titleLower.includes(\"electrical\")) return Settings;\r\n    if (titleLower.includes(\"information\") || titleLower.includes(\"computer\") || titleLower.includes(\"ict\")) return Laptop;\r\n    if (titleLower.includes(\"business\") || titleLower.includes(\"office\") || titleLower.includes(\"human resource\")) return TrendingUp;\r\n    if (titleLower.includes(\"hotel\") || titleLower.includes(\"hospitality\") || titleLower.includes(\"food\")) return Utensils;\r\n    if (titleLower.includes(\"nursing\") || titleLower.includes(\"health\")) return Heart;\r\n    if (titleLower.includes(\"motor\") || titleLower.includes(\"automotive\")) return Wrench;\r\n    if (titleLower.includes(\"construction\") || titleLower.includes(\"carpentry\") || titleLower.includes(\"civil\") || titleLower.includes(\"building\")) return Hammer;\r\n    if (titleLower.includes(\"fashion\")) return Scissors;\r\n    if (titleLower.includes(\"agriculture\") || titleLower.includes(\"horticulture\")) return Sprout;\r\n    if (titleLower.includes(\"beauty\") || titleLower.includes(\"hairdressing\")) return Paintbrush;\r\n    if (titleLower.includes(\"plumbing\")) return Wrench;\r\n    if (titleLower.includes(\"survey\")) return Map;\r\n    if (titleLower.includes(\"social work\") || titleLower.includes(\"community\")) return HandHeart;\r\n    if (titleLower.includes(\"electrical\")) return Zap;\r\n    if (titleLower.includes(\"building technology\")) return Building;\r\n    if (titleLower.includes(\"driving\")) return Car;\r\n    return GraduationCap;\r\n  };\r\n\r\n  const getCourseTypeColor = (type: string): string => {\r\n    switch (type) {\r\n      case 'diploma':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'certificate':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'artisan':\r\n        return 'bg-orange-100 text-orange-800';\r\n      case 'short_course':\r\n        return 'bg-purple-100 text-purple-800';\r\n      case 'nita_course':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'driving_course':\r\n        return 'bg-indigo-100 text-indigo-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  // Generate sample course details based on the course type and title\r\n  const getCourseDetails = (course: Course): CourseDetails => {\r\n    const titleLower = course.title.toLowerCase();\r\n    const isICT = titleLower.includes(\"information\") || titleLower.includes(\"computer\") || titleLower.includes(\"ict\");\r\n    const isEngineering = titleLower.includes(\"engineering\") || titleLower.includes(\"electrical\") || titleLower.includes(\"civil\");\r\n    const isBeauty = titleLower.includes(\"beauty\") || titleLower.includes(\"fashion\") || titleLower.includes(\"hairdressing\");\r\n    const isAgriculture = titleLower.includes(\"agriculture\") || titleLower.includes(\"horticulture\");\r\n    const isOffice = titleLower.includes(\"office\") || titleLower.includes(\"secretarial\");\r\n    const isDriving = course.type === 'driving_course';\r\n    const isNita = course.type === 'nita_course';\r\n    const isShort = course.type === 'short_course';\r\n\r\n    let modules: string[] = [];\r\n    let careerOpportunities: string[] = [];\r\n    let entryRequirements: string[] = [];\r\n\r\n    // Generate modules based on course type and content\r\n    if (isDriving) {\r\n      modules = [\r\n        \"Highway Code & Traffic Rules\",\r\n        \"Vehicle Controls & Operations\",\r\n        \"Defensive Driving Techniques\",\r\n        \"Road Safety & Emergency Procedures\",\r\n        \"Vehicle Maintenance Basics\",\r\n        \"Parking & Maneuvering\",\r\n        \"Weather Driving Conditions\",\r\n        \"Practical Driving Tests\"\r\n      ];\r\n      careerOpportunities = [\r\n        \"Private Driver\",\r\n        \"Commercial Driver\",\r\n        \"Delivery Driver\",\r\n        \"Taxi/Uber Driver\",\r\n        \"Truck Driver\",\r\n        \"Bus Driver\"\r\n      ];\r\n    } else if (isNita) {\r\n      if (titleLower.includes(\"computer\")) {\r\n        modules = [\r\n          \"Computer Hardware & Software\",\r\n          \"Office Applications (MS Office)\",\r\n          \"Data Entry & Management\",\r\n          \"Internet & Email Usage\",\r\n          \"Computer Maintenance\",\r\n          \"Troubleshooting Techniques\",\r\n          \"Digital Communication\",\r\n          \"File Management Systems\"\r\n        ];\r\n        careerOpportunities = [\r\n          \"Computer Operator\",\r\n          \"Data Entry Clerk\",\r\n          \"Office Assistant\",\r\n          \"IT Support Technician\",\r\n          \"Administrative Assistant\"\r\n        ];\r\n      } else if (titleLower.includes(\"electrical\")) {\r\n        modules = [\r\n          \"Electrical Theory & Principles\",\r\n          \"Wiring Installation Techniques\",\r\n          \"Safety Procedures & Regulations\",\r\n          \"Electrical Tools & Equipment\",\r\n          \"Circuit Testing & Troubleshooting\",\r\n          \"Electrical Codes & Standards\",\r\n          \"Motor Controls\",\r\n          \"Practical Workshop Training\"\r\n        ];\r\n        careerOpportunities = [\r\n          \"Electrical Wireman\",\r\n          \"Maintenance Electrician\",\r\n          \"Installation Technician\",\r\n          \"Electrical Assistant\",\r\n          \"Electrical Contractor\"\r\n        ];\r\n      } else {\r\n        // Generic NITA course modules\r\n        modules = [\r\n          \"Trade Theory & Principles\",\r\n          \"Practical Skills Training\",\r\n          \"Safety & Health Procedures\",\r\n          \"Tools & Equipment Usage\",\r\n          \"Quality Control Standards\",\r\n          \"Workshop Practice\",\r\n          \"Industry Standards\",\r\n          \"Professional Skills\"\r\n        ];\r\n        careerOpportunities = [\r\n          \"Skilled Tradesperson\",\r\n          \"Technical Assistant\",\r\n          \"Workshop Technician\",\r\n          \"Maintenance Worker\",\r\n          \"Quality Inspector\"\r\n        ];\r\n      }\r\n    } else if (isShort || course.type === 'short_course') {\r\n      if (titleLower.includes(\"food\")) {\r\n        modules = [\r\n          \"Food Safety & Hygiene\",\r\n          \"Basic Cooking Techniques\",\r\n          \"Menu Planning\",\r\n          \"Customer Service\",\r\n          \"Food Preparation\",\r\n          \"Kitchen Management\",\r\n          \"Nutrition Basics\",\r\n          \"Restaurant Operations\"\r\n        ];\r\n        careerOpportunities = [\r\n          \"Food Service Worker\",\r\n          \"Kitchen Assistant\",\r\n          \"Waiter/Waitress\",\r\n          \"Restaurant Supervisor\",\r\n          \"Catering Assistant\"\r\n        ];\r\n      } else if (titleLower.includes(\"office\")) {\r\n        modules = [\r\n          \"Office Procedures\",\r\n          \"Business Communication\",\r\n          \"Record Keeping\",\r\n          \"Customer Relations\",\r\n          \"Computer Applications\",\r\n          \"Filing Systems\",\r\n          \"Phone Etiquette\",\r\n          \"Administrative Tasks\"\r\n        ];\r\n        careerOpportunities = [\r\n          \"Office Assistant\",\r\n          \"Receptionist\",\r\n          \"Data Entry Clerk\",\r\n          \"Administrative Support\",\r\n          \"Customer Service Representative\"\r\n        ];\r\n      } else {\r\n        modules = [\r\n          \"Introduction to Field\",\r\n          \"Basic Techniques\",\r\n          \"Safety Procedures\",\r\n          \"Practical Applications\",\r\n          \"Industry Overview\",\r\n          \"Skills Development\",\r\n          \"Professional Practice\",\r\n          \"Assessment & Evaluation\"\r\n        ];\r\n        careerOpportunities = [\r\n          \"Entry-Level Technician\",\r\n          \"Assistant Worker\",\r\n          \"Support Staff\",\r\n          \"Trainee Position\",\r\n          \"Apprentice\"\r\n        ];\r\n      }\r\n    } else if (isICT) {\r\n      modules = [\r\n        \"Computer Applications & Office Suites\",\r\n        \"Programming Fundamentals\",\r\n        \"Database Management Systems\",\r\n        \"Web Development & Design\",\r\n        \"Networking Basics\",\r\n        \"System Administration\",\r\n        \"Project Management\",\r\n        \"Digital Literacy & Communication\"\r\n      ];\r\n      careerOpportunities = [\r\n        \"ICT Support Specialist\",\r\n        \"Web Developer\",\r\n        \"Database Administrator\",\r\n        \"System Administrator\",\r\n        \"Network Technician\",\r\n        \"Software Developer\",\r\n        \"IT Project Coordinator\"\r\n      ];\r\n    } else if (isEngineering) {\r\n      modules = [\r\n        \"Engineering Mathematics\",\r\n        \"Technical Drawing & CAD\",\r\n        \"Materials Science\",\r\n        \"Circuit Analysis\",\r\n        \"Power Systems\",\r\n        \"Control Systems\",\r\n        \"Project Design\",\r\n        \"Safety & Standards\"\r\n      ];\r\n      careerOpportunities = [\r\n        \"Engineering Technician\",\r\n        \"Project Supervisor\",\r\n        \"Maintenance Engineer\",\r\n        \"Quality Control Inspector\",\r\n        \"Design Assistant\",\r\n        \"Installation Technician\"\r\n      ];\r\n    } else if (isBeauty) {\r\n      modules = [\r\n        \"Anatomy & Physiology\",\r\n        \"Skincare & Facial Treatments\",\r\n        \"Makeup Artistry\",\r\n        \"Hair Styling & Cutting\",\r\n        \"Nail Technology\",\r\n        \"Business Management\",\r\n        \"Customer Service\",\r\n        \"Health & Safety\"\r\n      ];\r\n      careerOpportunities = [\r\n        \"Beauty Therapist\",\r\n        \"Makeup Artist\",\r\n        \"Salon Manager\",\r\n        \"Freelance Beauty Consultant\",\r\n        \"Spa Therapist\",\r\n        \"Beauty Product Sales\"\r\n      ];\r\n    } else if (isAgriculture) {\r\n      modules = [\r\n        \"Crop Production\",\r\n        \"Soil Science\",\r\n        \"Animal Husbandry\",\r\n        \"Farm Management\",\r\n        \"Agricultural Economics\",\r\n        \"Pest & Disease Control\",\r\n        \"Sustainable Farming\",\r\n        \"Agricultural Extension\"\r\n      ];\r\n      careerOpportunities = [\r\n        \"Agricultural Extension Officer\",\r\n        \"Farm Manager\",\r\n        \"Agricultural Consultant\",\r\n        \"Crop Production Specialist\",\r\n        \"Agricultural Sales Representative\",\r\n        \"Rural Development Officer\"\r\n      ];\r\n    } else if (isOffice) {\r\n      modules = [\r\n        \"Business Communication\",\r\n        \"Office Management\",\r\n        \"Accounting Principles\",\r\n        \"Human Resource Management\",\r\n        \"Computer Applications\",\r\n        \"Project Coordination\",\r\n        \"Customer Relations\",\r\n        \"Business Ethics\"\r\n      ];\r\n      careerOpportunities = [\r\n        \"Administrative Assistant\",\r\n        \"Office Manager\",\r\n        \"Executive Secretary\",\r\n        \"Customer Service Representative\",\r\n        \"Data Entry Specialist\",\r\n        \"Project Coordinator\"\r\n      ];\r\n    } else {\r\n      // Default modules for other courses\r\n      modules = [\r\n        \"Foundation Studies\",\r\n        \"Core Principles\",\r\n        \"Practical Skills\",\r\n        \"Industry Applications\",\r\n        \"Project Work\",\r\n        \"Professional Development\",\r\n        \"Safety & Standards\",\r\n        \"Communication Skills\"\r\n      ];\r\n      careerOpportunities = [\r\n        \"Industry Technician\",\r\n        \"Specialist Worker\",\r\n        \"Supervisor\",\r\n        \"Independent Contractor\",\r\n        \"Quality Controller\",\r\n        \"Maintenance Specialist\"\r\n      ];\r\n    }\r\n\r\n    // Entry requirements based on course level and type\r\n    if (isDriving) {\r\n      entryRequirements = [\r\n        \"Minimum age of 18 years\",\r\n        \"Valid national ID or passport\",\r\n        \"Medical certificate of fitness\",\r\n        \"Basic literacy skills\",\r\n        \"Good eyesight (with or without glasses)\"\r\n      ];\r\n    } else if (isNita) {\r\n      entryRequirements = [\r\n        \"Kenya Certificate of Primary Education (KCPE)\",\r\n        \"Basic literacy and numeracy skills\",\r\n        \"Interest in technical/vocational training\",\r\n        \"Physical fitness for practical work\"\r\n      ];\r\n    } else if (isShort || course.type === 'short_course') {\r\n      entryRequirements = [\r\n        \"Basic literacy and numeracy skills\",\r\n        \"Interest in the chosen field\",\r\n        \"No formal educational requirements\",\r\n        \"Willingness to learn practical skills\"\r\n      ];\r\n    } else if (course.type === 'diploma') {\r\n      entryRequirements = [\r\n        \"Kenya Certificate of Secondary Education (KCSE) with minimum grade D+ (Plus)\",\r\n        \"Relevant Certificate from a recognized institution\",\r\n        \"Mature entry: Minimum 3 years work experience in related field\",\r\n        \"Good command of English language\"\r\n      ];\r\n    } else if (course.type === 'certificate') {\r\n      entryRequirements = [\r\n        \"Kenya Certificate of Secondary Education (KCSE) with minimum grade D (Plain)\",\r\n        \"Kenya Certificate of Primary Education (KCPE)\",\r\n        \"Basic literacy and numeracy skills\",\r\n        \"Interest in the chosen field of study\"\r\n      ];\r\n    } else if (course.type === 'artisan') {\r\n      entryRequirements = [\r\n        \"Kenya Certificate of Primary Education (KCPE)\",\r\n        \"Basic literacy and numeracy skills\",\r\n        \"Physical fitness for practical work\",\r\n        \"Interest in hands-on technical training\"\r\n      ];\r\n    } else {\r\n      entryRequirements = [\r\n        \"Basic educational background\",\r\n        \"Interest in the field\",\r\n        \"Willingness to learn\",\r\n        \"Good communication skills\"\r\n      ];\r\n    }\r\n\r\n    // Determine level and other details\r\n    let level = course.level || '';\r\n    let mode = 'Full-time';\r\n    let intake = 'January, May & September';\r\n\r\n    if (isDriving) {\r\n      level = 'Basic';\r\n      mode = 'Flexible scheduling';\r\n      intake = 'Any time';\r\n    } else if (isNita) {\r\n      level = course.level || 'NITA Certified';\r\n      mode = 'Full-time';\r\n      intake = 'Monthly';\r\n    } else if (isShort) {\r\n      level = course.level || 'Short Course';\r\n      mode = 'Part-time/Full-time';\r\n      intake = 'Quarterly';\r\n    }\r\n\r\n    return {\r\n      modules,\r\n      careerOpportunities,\r\n      entryRequirements,\r\n      duration: course.duration,\r\n      level,\r\n      mode,\r\n      intake\r\n    };\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 py-16\">\r\n        <div className=\"container mx-auto px-4 text-center\">\r\n          <h1 className=\"text-3xl font-bold text-red-600 mb-4\">Error Loading Course</h1>\r\n          <p className=\"text-gray-600 mb-6\">Please check your connection and try again.</p>\r\n          <Link href=\"/courses\">\r\n            <Button className=\"bg-blue-600 hover:bg-blue-700\">\r\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n              Back to Courses\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 py-8\">\r\n        <div className=\"container mx-auto px-4\">\r\n          {/* Back button skeleton */}\r\n          <Skeleton className=\"h-10 w-32 mb-6\" />\r\n          \r\n          {/* Header skeleton */}\r\n          <div className=\"mb-8\">\r\n            <div className=\"flex items-start gap-6 mb-6\">\r\n              <Skeleton className=\"w-16 h-16 rounded-lg\" />\r\n              <div className=\"flex-1\">\r\n                <Skeleton className=\"h-8 w-96 mb-2\" />\r\n                <Skeleton className=\"h-6 w-20 mb-4\" />\r\n                <Skeleton className=\"h-20 w-full\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Content skeleton */}\r\n          <div className=\"grid lg:grid-cols-3 gap-8\">\r\n            <div className=\"lg:col-span-2 space-y-6\">\r\n              {Array.from({ length: 3 }, (_, i) => (\r\n                <Card key={i} className=\"p-6\">\r\n                  <Skeleton className=\"h-6 w-48 mb-4\" />\r\n                  <div className=\"space-y-2\">\r\n                    {Array.from({ length: 4 }, (_, j) => <Skeleton key={j} className=\"h-4 w-full\" />)}\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n            <div className=\"space-y-6\">\r\n              <Card className=\"p-6\">\r\n                <Skeleton className=\"h-6 w-32 mb-4\" />\r\n                <div className=\"space-y-3\">\r\n                  {Array.from({ length: 4 }, (_, i) => <Skeleton key={i} className=\"h-4 w-full\" />)}\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!course) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 py-16\">\r\n        <div className=\"container mx-auto px-4 text-center\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">Course Not Found</h1>\r\n          <p className=\"text-gray-600 mb-6\">The course you're looking for doesn't exist or has been removed.</p>\r\n          <Link href=\"/courses\">\r\n            <Button className=\"bg-blue-600 hover:bg-blue-700\">\r\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n              Back to Courses\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const IconComponent = getIcon(course.title, course.type);\r\n  const courseDetails = getCourseDetails(course);\r\n\r\n  // Get course type info for styling\r\n  const getCourseTypeInfo = (type: string) => {\r\n    switch (type) {\r\n      case 'diploma':\r\n        return { color: 'blue', label: 'Diploma Program' };\r\n      case 'certificate':\r\n        return { color: 'green', label: 'Certificate Program' };\r\n      case 'artisan':\r\n        return { color: 'orange', label: 'Artisan Program' };\r\n      case 'short_course':\r\n        return { color: 'purple', label: 'Short Course' };\r\n      case 'nita_course':\r\n        return { color: 'red', label: 'NITA Course' };\r\n      case 'driving_course':\r\n        return { color: 'indigo', label: 'Driving Course' };\r\n      default:\r\n        return { color: 'gray', label: 'Course' };\r\n    }\r\n  };\r\n\r\n  const typeInfo = getCourseTypeInfo(course.type);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"container mx-auto px-4\">\r\n        {/* Back Button */}\r\n        <Link href=\"/courses\">\r\n          <Button variant=\"outline\" className=\"mb-6\">\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Back to Courses\r\n          </Button>\r\n        </Link>\r\n\r\n        {/* Course Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-start gap-6 mb-6\">\r\n            <div className={`w-16 h-16 bg-${typeInfo.color}-500 rounded-lg flex items-center justify-center flex-shrink-0`}>\r\n              <IconComponent className=\"text-white w-8 h-8\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center gap-3 mb-2 flex-wrap\">\r\n                <h1 className=\"text-3xl lg:text-4xl font-bold text-gray-900\">\r\n                  {course.title}\r\n                </h1>\r\n                <Badge className={`${getCourseTypeColor(course.type)} capitalize`}>\r\n                  {typeInfo.label}\r\n                </Badge>\r\n              </div>\r\n              <p className=\"text-xl text-gray-600 mb-4 max-w-4xl\">\r\n                {course.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"grid lg:grid-cols-3 gap-8\">\r\n          {/* Left Column - Course Content */}\r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {/* Course Modules */}\r\n            <Card className=\"p-6\">\r\n              <CardHeader className=\"px-0 pt-0\">\r\n                <CardTitle className=\"flex items-center gap-2 text-xl\">\r\n                  <BookOpen className={`w-5 h-5 text-${typeInfo.color}-600`} />\r\n                  {course.type === 'driving_course' ? 'Training Modules' : 'Course Modules'}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"px-0\">\r\n                <div className=\"grid md:grid-cols-2 gap-3\">\r\n                  {courseDetails.modules.map((module, index) => (\r\n                    <div key={index} className=\"flex items-start gap-3 p-3 bg-gray-50 rounded-lg\">\r\n                      <CheckCircle className={`w-5 h-5 text-${typeInfo.color}-600 mt-0.5 flex-shrink-0`} />\r\n                      <span className=\"text-gray-800\">{module}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Career Opportunities */}\r\n            <Card className=\"p-6\">\r\n              <CardHeader className=\"px-0 pt-0\">\r\n                <CardTitle className=\"flex items-center gap-2 text-xl\">\r\n                  <Briefcase className={`w-5 h-5 text-${typeInfo.color}-600`} />\r\n                  Career Opportunities\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"px-0\">\r\n                <div className=\"grid md:grid-cols-2 gap-3\">\r\n                  {courseDetails.careerOpportunities.map((career, index) => (\r\n                    <div key={index} className={`flex items-center gap-3 p-3 bg-${typeInfo.color}-50 rounded-lg`}>\r\n                      <Target className={`w-5 h-5 text-${typeInfo.color}-600 flex-shrink-0`} />\r\n                      <span className=\"text-gray-800\">{career}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Entry Requirements */}\r\n            <Card className=\"p-6\">\r\n              <CardHeader className=\"px-0 pt-0\">\r\n                <CardTitle className=\"flex items-center gap-2 text-xl\">\r\n                  <Award className={`w-5 h-5 text-${typeInfo.color}-600`} />\r\n                  Entry Requirements\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"px-0\">\r\n                <div className=\"space-y-3\">\r\n                  {courseDetails.entryRequirements.map((requirement, index) => (\r\n                    <div key={index} className=\"flex items-start gap-3 p-3 bg-orange-50 rounded-lg\">\r\n                      <CheckCircle className=\"w-5 h-5 text-orange-600 mt-0.5 flex-shrink-0\" />\r\n                      <span className=\"text-gray-800\">{requirement}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Right Column - Course Info Sidebar */}\r\n          <div className=\"space-y-6\">\r\n            {/* Quick Info */}\r\n            <Card className=\"p-6\">\r\n              <CardHeader className=\"px-0 pt-0\">\r\n                <CardTitle className=\"text-xl\">Course Information</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"px-0\">\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <Clock className=\"w-5 h-5 text-gray-500\" />\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-500\">Duration</span>\r\n                      <p className=\"font-semibold\">{courseDetails.duration}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <Award className=\"w-5 h-5 text-gray-500\" />\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-500\">Level</span>\r\n                      <p className=\"font-semibold\">{courseDetails.level}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <Users className=\"w-5 h-5 text-gray-500\" />\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-500\">Mode of Study</span>\r\n                      <p className=\"font-semibold\">{courseDetails.mode}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <Calendar className=\"w-5 h-5 text-gray-500\" />\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-500\">Intake</span>\r\n                      <p className=\"font-semibold\">{courseDetails.intake}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Application CTA */}\r\n            <Card className={`p-6 bg-${typeInfo.color}-50 border-${typeInfo.color}-200`}>\r\n              <CardHeader className=\"px-0 pt-0\">\r\n                <CardTitle className={`text-xl text-${typeInfo.color}-900`}>Ready to Apply?</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"px-0\">\r\n                <p className={`text-${typeInfo.color}-700 mb-4`}>\r\n                  Take the first step towards your career in {course.title.toLowerCase()}.\r\n                </p>\r\n                <div className=\"space-y-3\">\r\n                  <Link href=\"/admissions\" className=\"block\">\r\n                    <Button className={`w-full bg-${typeInfo.color}-600 hover:bg-${typeInfo.color}-700`}>\r\n                      Apply Now\r\n                    </Button>\r\n                  </Link>\r\n                  <Link href=\"/contact\" className=\"block\">\r\n                    <Button variant=\"outline\" className={`w-full border-${typeInfo.color}-600 text-${typeInfo.color}-600 hover:bg-${typeInfo.color}-600 hover:text-white`}>\r\n                      Get More Information\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Contact Information */}\r\n            <Card className=\"p-6\">\r\n              <CardHeader className=\"px-0 pt-0\">\r\n                <CardTitle className=\"text-xl\">Need Help?</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"px-0\">\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  Our admissions team is here to help you with any questions about this course.\r\n                </p>\r\n                <div className=\"space-y-2 text-sm\">\r\n                  <p><strong>Phone:</strong> +254 XXX XXX XXX</p>\r\n                  <p><strong>Email:</strong> admissions@kongonitechnical.ac.ke</p>\r\n                  <p><strong>Office Hours:</strong> Mon-Fri, 8AM-5PM</p>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Related Courses */}\r\n        {courses && (\r\n          <div className=\"mt-16\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Related Courses</h2>\r\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {courses\r\n                .filter(c => c.type === course.type && c.id !== course.id)\r\n                .slice(0, 3)\r\n                .map((relatedCourse) => {\r\n                  const RelatedIcon = getIcon(relatedCourse.title, relatedCourse.type);\r\n                  const relatedTypeInfo = getCourseTypeInfo(relatedCourse.type);\r\n                  return (\r\n                    <Card key={relatedCourse.id} className=\"p-6 hover:shadow-lg transition-shadow\">\r\n                      <div className=\"flex items-start gap-4\">\r\n                        <div className={`w-10 h-10 bg-${relatedTypeInfo.color}-200 rounded-lg flex items-center justify-center flex-shrink-0`}>\r\n                          <RelatedIcon className={`text-${relatedTypeInfo.color}-600 w-5 h-5`} />\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                          <h3 className=\"font-semibold text-gray-900 mb-2 line-clamp-2\">\r\n                            {relatedCourse.title}\r\n                          </h3>\r\n                          <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">\r\n                            {relatedCourse.description}\r\n                          </p>\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className={`text-${relatedTypeInfo.color}-600 font-medium text-sm`}>\r\n                              {relatedCourse.duration}\r\n                            </span>\r\n                            <Link href={`/courses/${relatedCourse.id}`}>\r\n                              <Button size=\"sm\" variant=\"outline\">\r\n                                View Course\r\n                              </Button>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Card>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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oBACA;iBACD;gBACD,sBAAsB;oBACpB;oBACA;oBACA;oBACA;oBACA;iBACD;YACH,OAAO;gBACL,UAAU;oBACR;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,sBAAsB;oBACpB;oBACA;oBACA;oBACA;oBACA;iBACD;YACH;QACF,OAAO,IAAI,OAAO;YAChB,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,sBAAsB;gBACpB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH,OAAO,IAAI,eAAe;YACxB,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,sBAAsB;gBACpB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH,OAAO,IAAI,UAAU;YACnB,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,sBAAsB;gBACpB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH,OAAO,IAAI,eAAe;YACxB,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,sBAAsB;gBACpB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH,OAAO,IAAI,UAAU;YACnB,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,sBAAsB;gBACpB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH,OAAO;YACL,oCAAoC;YACpC,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,sBAAsB;gBACpB;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QAEA,oDAAoD;QACpD,IAAI,WAAW;YACb,oBAAoB;gBAClB;gBACA;gBACA;gBACA;gBACA;aACD;QACH,OAAO,IAAI,QAAQ;YACjB,oBAAoB;gBAClB;gBACA;gBACA;gBACA;aACD;QACH,OAAO,IAAI,WAAW,OAAO,IAA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","debugId":null}}]
}